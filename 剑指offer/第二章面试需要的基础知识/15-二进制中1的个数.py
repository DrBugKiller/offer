# -*- coding: utf-8 -*-
# @Time    : 2019/7/27 22:54
# @Author  : DrMa
'''
题目:输入一个整数,输出它的二进制数中1的个数.
思路:
1. 很tricky, 假设输入为n, 假设对应的二进制是1100,我们减1得到1011,发现最右边的1取反,后边的0也取反.
假设对应的二进制是1001,我们减1得到1000,同样发现最右边的1取反,后边没有数.
Note that: 如果1100&(1100-1)=1100&1011=1000,这样,我们把原数中的1给去掉了.
我们可以得到一个结论, n二进制减1再和它本身二进制进行"与"操作,会让最右边的1变成0, 而其他的没有变化.
2. 负数的二进制表示: 1.得到原码 2.逐位求反得到反码 3. 加1得到补码即结果.
例: -2的二进制表示:
    1.原码 10, 补位(8或者16都行),0000 0010.
    2.反码 1111 1101
    3.补码 1111 1110
3.在python中求a的补码就简单了: a=a & 0xffff (8位补码) a=a& 0xffffffff (16位补码)
'''
def num_binary_1(n):
    count=0
    if n < 0:#如果是负数,我们要得到补码,因为负数的二进制用补码表示
        n = n & 0xffffffff
    while n>0:
        n=(n-1)&n #核心,&默认是二进制进行运算
        count+=1
    return count
